From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: RuscalWorld <me@ruscalworld.ru>
Date: Tue, 6 Jul 2021 19:02:42 +0300
Subject: [PATCH] Fix Voluntary Exile advancement

Just backport of patch from Purpur that does the same
Original patch: https://github.com/pl3xgaming/Purpur/commit/e92d259e9053570cb49647ce5675d1a82ad6fc41

diff --git a/src/main/java/net/minecraft/world/entity/LivingEntity.java b/src/main/java/net/minecraft/world/entity/LivingEntity.java
index 57c448ee93df76fc2a17c75fafc78408d720ced3..2f2d63c19c5b06718bf49a346ee0964e9306c3d8 100644
--- a/src/main/java/net/minecraft/world/entity/LivingEntity.java
+++ b/src/main/java/net/minecraft/world/entity/LivingEntity.java
@@ -1624,7 +1624,9 @@ public abstract class LivingEntity extends Entity {
                 org.bukkit.event.entity.EntityDeathEvent deathEvent = this.dropAllDeathLoot(source);
                 if (deathEvent == null || !deathEvent.isCancelled()) {
                     if (this.deathScore >= 0 && entityliving != null) {
+                        this.fixHead(); // Utopia
                         entityliving.awardKillScore(this, this.deathScore, source);
+                        this.fixHead(); // Utopia
                     }
 
                     if (this.isSleeping()) {
@@ -4194,5 +4196,7 @@ public abstract class LivingEntity extends Entity {
         this.absMoveTo(d0, d1, d2, f, f1);
         this.setDeltaMovement((double) ((float) packet.getXd() / 8000.0F), (double) ((float) packet.getYd() / 8000.0F), (double) ((float) packet.getZd() / 8000.0F));
     }
+
+    public void fixHead() { } // Utopia
 }
 
diff --git a/src/main/java/net/minecraft/world/entity/raid/Raider.java b/src/main/java/net/minecraft/world/entity/raid/Raider.java
index 54b5cfa35e5fe9138d39a73f2085f594f1987cda..a7034a3352bf03b8827552dd07b08a9c8bbd1334 100644
--- a/src/main/java/net/minecraft/world/entity/raid/Raider.java
+++ b/src/main/java/net/minecraft/world/entity/raid/Raider.java
@@ -152,6 +152,11 @@ public abstract class Raider extends PatrollingMonster {
                 }
 
                 if (!itemstack.isEmpty() && ItemStack.matches(itemstack, Raid.getLeaderBannerInstance()) && entityhuman != null) {
+                    // Utopia start
+                    this.fixHead = itemstack.cloneItemStack(true);
+                    this.fixHead.setCount(1);
+                    // Utopia end
+
                     MobEffectInstance mobeffect = entityhuman.getEffect(MobEffects.BAD_OMEN);
                     byte b0 = 1;
                     int i;
@@ -568,4 +573,18 @@ public abstract class Raider extends PatrollingMonster {
             }
         }
     }
+
+    // Utopia start
+    private ItemStack fixHead = null;
+
+    @Override
+    public void fixHead() {
+        if (this.fixHead != null) {
+            setSlot(EquipmentSlot.HEAD, this.fixHead, true);
+            this.fixHead = null;
+        } else {
+            setSlot(EquipmentSlot.HEAD, ItemStack.EMPTY, false);
+        }
+    }
+    // Utopia end
 }
